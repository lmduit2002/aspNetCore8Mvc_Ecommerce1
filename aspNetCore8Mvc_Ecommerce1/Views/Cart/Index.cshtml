@model List<aspNetCore8Mvc_Ecommerce1.ViewModels.CartItemVM>

@{
    string apiUrl = ViewData["APIUrl"]?.ToString() ?? string.Empty;
    ViewData["Title"] = "Cart";
    Layout = "_DefaultLayout";
}
<!-- Single Page Header start -->
    <div class="container-fluid page-header py-5">
        <h1 class="text-center text-white display-6">Shop</h1>
        <ol class="breadcrumb justify-content-center mb-0">
            <li class="breadcrumb-item"><a href="#">Home</a></li>
            <li class="breadcrumb-item"><a href="#">Pages</a></li>
            <li class="breadcrumb-item active text-white">Shop</li>
        </ol>
    </div>
<!-- Single Page Header End -->
<!-- Cart Page Start -->
<div class="container-fluid py-5">
    <div class="container py-5">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Products</th>
                        <th scope="col">Name</th>
                        <th scope="col">Price</th>
                        <th scope="col">Discount</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Total</th>
                        <th scope="col">Handle</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var item in Model)
                    {
                        <tr>
                            <th scope="row">
                                <div class="d-flex align-items-center">
                                    <a asp-controller="HangHoa" asp-action="Detail" asp-route-id="@item.MaHh">
                                    <img src="~/Hinh/HangHoa/@item.Hinh" class="img-fluid me-5 rounded-circle" style="width: 80px; height: 80px;" alt="">
                                    </a>
                                </div>
                            </th>
                            <td>
                                <a asp-controller="HangHoa" asp-action="Detail" asp-route-id="@item.MaHh">
                                <p class="mb-0 mt-4">@item.TenHh</p>
                                </a>
                            </td>
                            <td>
                                <p class="mb-0 mt-4">@item.DonGia $</p>
                            </td>
                            <td>
                                <p class="mb-0 mt-4">@(item.GiamGia == null || item.GiamGia == 0 ? "" : item.GiamGia + " %")</p>
                            </td>
                            <td>
                                <div class="input-group quantity mt-4" style="width: 100px;">
                                    <div class="input-group-btn">
                                        <button type="button" class="btn btn-sm btn-minus rounded-circle bg-light border">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                    <input name="SoLuong" type="text" class="form-control form-control-sm text-center border-0" value="@item.SoLuong">
                                    <div class="input-group-btn">
                                        <button type="button" class="btn btn-sm btn-plus rounded-circle bg-light border">
                                            <i class="fa fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="mb-0 mt-4">@item.ThanhTien $</p>
                            </td>
                            <td>
                                <button onclick="onDeleteItem(@item.MaHhdetail)" class="btn btn-md rounded-circle bg-light border mt-4">
                                    <i class="fa fa-times text-danger"></i>
                                </button>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="mt-5">
            <input type="text" class="border-0 border-bottom rounded me-5 py-3 mb-4" placeholder="Coupon Code">
            <button class="btn border-secondary rounded-pill px-4 py-3 text-primary" type="button">Apply Coupon</button>
        </div>
        <div class="row g-4 justify-content-end">
            <div class="col-8"></div>
            <div class="col-sm-8 col-md-7 col-lg-6 col-xl-4">
                <div class="bg-light rounded">
                    <div class="py-4 mb-4 border-top border-bottom d-flex justify-content-between">
                        <h5 class="mb-0 ps-4 me-4">Total</h5>
                        <p id="total" class="mb-0 pe-4"></p>
                    </div>
                    <button class="btn border-secondary rounded-pill px-4 py-3 text-primary text-uppercase mb-4 ms-4" type="button">Proceed Checkout</button>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="/js/lib/axios.min.js"></script>
    <script>
        let cart = @Html.Raw(Json.Serialize(Model));
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById("total").innerText = `$${calculatingTotal()}`
        });
        calculatingTotal = () => {
            let total = 0;
            cart.forEach(item => {
                total += item.thanhTien;
            });
            return total;
        }

        onDeleteItem = (MaHHDetail) => {
            axios.post("@apiUrl/Cart/RemoveItem", { MaHHDetail })
                .then(res => {
                    toastr.success("Thông tin", res.data.message);
                    doLoadCart();
                })
                .catch(err => {
                    toastr.error("Lỗi", "Thêm vào giỏ hàng thất bại")
                })
        }

        doLoadCart = () => {
            axios.get("@apiUrl/Cart/Index")
                .then(res => {
                    // console.log("Cart Items: ", res.data);
                    // Xử lý giao diện giỏ hàng ở đây
                })
                .catch(err => {
                    console.error("Error fetching cart items: ", err);
                });
        }
    </script>
}
<!-- Cart Page End -->